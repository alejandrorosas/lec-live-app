name: Android CI

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
  release:
    types: [ published ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5

      - name: Build
        run: ./gradlew assembleDebug

      - name: Upload artifact
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v5
        id: app-debug-apk-upload-step
        with:
          name: app-debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk
          if-no-files-found: error

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5

      - name: Lint
        run: ./gradlew ktlint

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ vars.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}

      - uses: actions/checkout@v5
        with:
          token: ${{ steps.app-token.outputs.token }}

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5

      - name: Unit tests
        run: ./gradlew test

      - name: Screenshot tests
        id: screenshot-tests
        run: ./gradlew validateScreenshotTest

      - name: Update screenshots if needed
        if: ${{ failure() && steps.screenshot-tests.outcome == 'failure' && github.event_name == 'pull_request' }}
        run: ./gradlew updateScreenshotTest

      - name: Update screenshots
        if: ${{ failure() && steps.screenshot-tests.outcome == 'failure' && github.event_name == 'pull_request' }}
        run: |
          git config --local user.email "202522564+android-app-template-bot[bot]@users.noreply.github.com"
          git config --local user.name "android-app-template-bot[bot]"
          git fetch origin $GITHUB_HEAD_REF
          git checkout $GITHUB_HEAD_REF
          git add .
          git diff-index --quiet HEAD || git commit -m "Update screenshots"
          git push

  ui-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: 17

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5

      - name: UI tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: google_apis
          script: ./gradlew connectedCheck

  release:
    runs-on: ubuntu-latest
    needs: [ build, lint, unit-tests, ui-tests ]
    if: ${{ github.event_name == 'release' }}
    outputs:
      version-name: ${{ steps.get-version-metadata.outputs.version-name }}
      version-code: ${{ steps.get-version-metadata.outputs.version-code }}
    steps:
      - uses: actions/checkout@v5

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5

      - name: Get and increase version code
        id: get-version-metadata
        run: |
          VERSION_CODE=$(grep 'versionCode' app/build.gradle | awk '{print $2}')
          VERSION_CODE=$((VERSION_CODE + 1))
          echo "version-code=${VERSION_CODE}" >> $GITHUB_OUTPUT
          echo "version-name=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT

      - name: Increase version code and change version name
        env:
          VERSION_NAME: ${{ steps.get-version-metadata.outputs.version-name }}
          VERSION_CODE: ${{ steps.get-version-metadata.outputs.version-code }}
        run: |
          sed -i "s/versionName \"[^\"]*\"/versionName \"${{ env.VERSION_NAME }}\"/g" app/build.gradle
          sed -i "s/versionCode [0-9]*/versionCode ${{ env.VERSION_CODE }}/g" app/build.gradle

      - name: Setup Keystore
        env:
          ENCODED_KEYSTORE: ${{ secrets.SIGNING_RELEASE_STORE_FILE }}
        run: echo $ENCODED_KEYSTORE | base64 -di > app/upload-keystore.jks

      - name: Publish app listing to Google Play
        env: 
          ANDROID_PUBLISHER_CREDENTIALS: ${{ secrets.ANDROID_PUBLISHER_CREDENTIALS }}
        run: ./gradlew publishListing

      - name: Publish app bundle to Google Play
        env:
          SIGNING_RELEASE_KEY_ALIAS: ${{ secrets.SIGNING_RELEASE_KEY_ALIAS }}
          SIGNING_RELEASE_KEY_PASSWORD: ${{ secrets.SIGNING_RELEASE_KEY_PASSWORD }}
          SIGNING_RELEASE_STORE_PASSWORD: ${{ secrets.SIGNING_RELEASE_STORE_PASSWORD }}
          ANDROID_PUBLISHER_CREDENTIALS: ${{ secrets.ANDROID_PUBLISHER_CREDENTIALS }}
        run: ./gradlew publishBundle --track production

  post-release:
    runs-on: ubuntu-latest
    needs: release
    if: ${{ github.event_name == 'release' }}
    steps:
      - uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ vars.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}

      - uses: actions/checkout@v5
        with:
          token: ${{ steps.app-token.outputs.token }}
          ref: main

      - name: Update version code for next release
        id: update-version-code
        env:
          VERSION_NAME: ${{ needs.release.outputs.version-name }}
          VERSION_CODE: ${{ needs.release.outputs.version-code }}
        run: |
          sed -i "s/versionName \"[^\"]*\"/versionName \"${{ env.VERSION_NAME }}-dev\"/g" app/build.gradle
          sed -i "s/versionCode [0-9]*/versionCode ${{ env.VERSION_CODE }}/g" app/build.gradle

      - name: Post release
        run: |
          git config --local user.email "202522564+android-app-template-bot[bot]@users.noreply.github.com"
          git config --local user.name "android-app-template-bot[bot]"
          git add app/build.gradle
          git commit -m "Update version metadata for next release"
          git push
